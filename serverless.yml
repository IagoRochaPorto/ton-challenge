service: sls-my-first-service

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 128
  timeout: 3
  httpApi:
    cors: true

functions:
  usersApi:
    name: ${sls:stage}-users-lambda
    handler: functions/usersApi.handler
    description: users api
    events:
      - http:
          path: /user
          method: GET
          cors: true
      - http:
          path: /user/{userId}
          method: GET
          cors: true

resources:
  Resources:
    # Users Table
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    apiLambdaIam:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${sls:stage}-api-lambda-iam
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: DynamoDBWriteAccess
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                    - dynamodb:Query
                  Resource:
                    - !Sub "${usersTable.Arn}"
                    - !Sub "${usersTable.Arn}/index/*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline
