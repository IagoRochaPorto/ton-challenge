service: sls-my-first-service
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${env:AWS_REGION, 'us-east-1'}
  memorySize: 128
  timeout: 3
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { 'Fn::GetAtt': ['usersTable', 'Arn'] }

functions:
  usersApi:
    name: ${sls:stage}-users-lambda
    handler: functions/usersApi.handler
    description: users api
    events:
      - http:
          path: /user
          method: POST
          cors: true
      - http:
          path: /auth
          method: POST
          cors: true
      - http:
          path: /user
          method: GET
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin
